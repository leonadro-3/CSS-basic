/* original source */

/*


* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
}

.card {
    position: relative;
    width: 600px;
    height: 350px;
    background-color: #ccc;
    border-radius: 20px;
    display: flex;
    align-items: center;
    border-radius: 20px;
    transition: 0.5s;
}

.card .circle {
    position:absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: 20px;
    overflow: hidden;
}

.card:hover .circle:before {
    content: '';
    position:absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: white;
    clip-path: circle(120px at center);
    transition: 0.5s;
}

.card .circle:hover:before {
    background: #0065c3;
    clip-path: circle(400px at center);
}

.card img {
    position:absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    height: 300px;
    pointer-events: none;
    transition: 0.5s;
}

.card:hover img {
    left: 72%;
    height: 500px;
}

.card .content {
    position: relative;
    width: 50%;
    padding: 20px 20px 20px 40px;
    transition: 0.5s;
    opacity: 0;
    visibility: hidden;
}

.card:hover .content {
    left: 0;
    opacity: 1;
    visibility: visible;
}

.card .content h2 {
    color: #fff;
    text-transform: uppercase;
    font-size: 2em;
    line-height: 1em;
    margin-bottom: 5px;
}

.card .content p {
    color: #fff;
}

.card .content a {
    position: relative;
    color: #fff;
    padding: 10px 20px;
    border-radius: 10px;
    background: #fff;
    color: #111;
    margin-top: 10px;
    display: inline-block;
    text-decoration: none;
    font-weight: 700;
}

@media (max-width: 991px) {
    .card {
        width: auto;
        max-width: 350px;
        align-items: flex-start;
    }
    .card:hover {
        height: 600px;
    }
    .card .content {
        width: 100%;
        height: 0;
        padding: 30px;
    }
    .card:hover img {
        top: 70%;
        left: 50%;
        height: 300px;
    }
}

@media (max-width: 420px){
    .card .content{
        padding: 20px;
    }
}
 

*/



/* 아래 CSS 코드들과 HTML를 보면서 어떻게 진행되었는지 보자. */

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* 모든 html 요소들의 마진과 패딩값을 0으로 만들어주고 box모델를 box-sizing 계산방식으로 지정하였다. */

body {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
}

/* 
    display:flex (https://developer.mozilla.org/ko/docs/Learn/CSS/CSS_layout/Flexbox)

    - display:flex를 선언하면 flex-box의 main axis(default:row)와 cross axis(default:column)에 따라서 flex-box내 item들을 어떻게 배치할지 정할 수 있습니다.
    flex-box를 선언하는 태그의 부모,자식 관계에 따라서 flex-container의 영역도 달라집니다. 
    예를들어 현재는 body 태그에 flex를 선언하여 body 태그 아래의 모든 것들은 flex의 명령가가 먹힌다고 볼 수 있습니다. 
    하지만 부모와 자식의 관계에서만 적용이됩니다. 그래서 body 아래의 card 영역에 다시 flex를 선언하였습니다. 

    
    
    justify-content & align-item 

    - justify-content:(기타등등)은 main axis의 값에 영향을 받는데 center값을 넣었기 때문에 row든 column이든 상관없습니다.
    align-item:(기타등등)은 마찬가지로 cross axis의 값에 영향을 받습니다.



    min-height & vh (https://www.sitepoint.com/css-viewport-units-quick-start/)

    - min-height: 100vh는 최소한의 높이값을 말합니다. 여기서 vh는 viewport height의 약자로 브라우저의 크기에 따라 달라지는 비율을 말합니다. 
    즉, 100vh는 브라우저의 높이가 100px일 때 100px의 값을 얻습니다. html 태그가 이닌 body 태그 아래에 html의 다른 태그들을 생성했기 때문에 적용되는 범위가 다르다는 것을 알아야 합니다. 
    
    */


.card {
    position: relative;
    width: 600px;
    height: 350px;
    /* background-color: #ccc; */
    border-radius: 20px;
    display: flex;
    align-items: center;
    transition: 0.5s;
}


/* 
    position:relative; (https://developer.mozilla.org/ko/docs/Web/CSS/position)

    - position에는 static, relative, absolute가 있다. static은 block과 동일하며 reltative는 static을 기준으로(원래 위치) top, right, bottom, left 값으로 조절한다.
    absolute는 원래 위치와 상관없이 바로 위 부모 요소를 기준으로 결정된다.

*/



.card .circle {
    position:absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: 20px;
    overflow: hidden;
}

/* 
    overflow:hidden; (https://offbyone.tistory.com/296)
    - overflow에는 hidden, visible, scroll, auto가 있다. 컨텐츠가 커서 모두 보여주기 힘들 때 어떻게 보여줄지 결정한다. 

*/

.card:hover .circle:before {
    content: '';
    position:absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: red;
    clip-path: circle(120px at center);
    transition: 0.5s;
}

/* 
    content: ''; (https://dasima.xyz/css-content/)
    - content는 after와 before를 사용하여 여러가지를 할 수 있다.
    1. 현재 사례처럼 간단한 에니메이션을 만들수 있다.
    2. h1과 같은 태그에 컨텐츠에 반복되는 글자를 넣는다.
    3. 링크 앞에 이미지를 넣을 수 있다. 
    .. 등등 보다 많은 사례는 contents-properties 폴더를 확인해라. 

*/

/* 
    clip-path: circle(120px at center); (http://www.devdic.com/css/refer/properties/property:792/clip-path)
    일반적으로 한 사진을 불러와서 원이나 삼각형, 타원형을 만든다. 이러한 디자인 기법을 클리핑이라고 하는데 포토샵에서 클리핑 마스크라고 한다.
    (https://blog.naver.com/phominator/110176112794)

*/


.card .circle:hover:before {
    background: #0065c3;
    clip-path: circle(400px at center);
}

.card img {
    position:absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    height: 300px;
    pointer-events: none;
    transition: 0.5s;
}

.card:hover img {
    left: 72%;
    height: 500px;
}

.card .content {
    position: relative;
    width: 50%;
    padding: 20px 20px 20px 40px;
    transition: 0.5s;
    opacity: 0;
    visibility: hidden;
}

.card:hover .content {
    left: 0;
    opacity: 1;
    visibility: visible;
}

.card .content h2 {
    color: #fff;
    text-transform: uppercase;
    font-size: 2em;
    line-height: 1em;
    margin-bottom: 5px;
}

.card .content p {
    color: #fff;
}

.card .content a {
    position: relative;
    color: #fff;
    padding: 10px 20px;
    border-radius: 10px;
    background: #fff;
    color: #111;
    margin-top: 10px;
    display: inline-block;
    text-decoration: none;
    font-weight: 700;
}

@media (max-width: 991px) {
    .card {
        width: auto;
        max-width: 350px;
        align-items: flex-start;
    }
    .card:hover {
        height: 600px;
    }
    .card .content {
        width: 100%;
        height: 0;
        padding: 30px;
    }
    .card:hover img {
        top: 70%;
        left: 50%;
        height: 300px;
    }
}

@media (max-width: 420px){
    .card .content{
        padding: 20px;
    }
}


/* 문제점 */
/* 펩시 콜라 이미지에 hover되면 파란색 카드와 함께 설명란과 BuyNow 버튼이 생긴다. 
그런데 이미지에서 buy now로 넘어갈 때 파란색 카드가 사라지는데 buy now 버튼의 색깔이 흰색이라 카드가 사라진다. Transition time을 조정해보자. */
